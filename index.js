const { createRequestBlank } = require('./dist/bundle.js')
const fs = require('fs')

;(async () => {
  const res = await Promise.all([
    createRequestBlank({
      from: 'От: Андрея',
      withRespect: `С уважением, Андрей.`,
      to: 'Команда по доте "БуТыРкА"',
      type: 'ДОТА',
      clarification: 'Я, Жуйков Роман',
      date: new Date(),
    }),
    createRequestBlank({
      from: 'От: Андрея Пономаренко',
      withRespect: `С уважением, Андрей Пономаренко.`,
      to: 'Команда по доте "БуТыРкА"',
      type: 'ДОТА',
      clarification: 'Я, Жуйков Роман, прошу Вас одобрить татуировку',
      date: new Date(),
      blankType: 'default',
    }),
    createRequestBlank({
      from: 'От: Андрея Пономаренко Викторовича',
      withRespect: `С уважением, Андрей Пономаренко Викторович.`,
      to: 'Команда по доте "БуТыРкА"',
      type: 'ДОТА',
      clarification:
        'Я, Жуйков Роман, прошу Вас одобрить татуировку на Вашем теле с изображением Иосифа Виссарионовича Сталина.',
      date: new Date(),
      blankType: 'dota',
    }),
    createRequestBlank({
      from: 'От: Андрея Пономаренко Викторовича',
      withRespect: `С уважением, Андрей Пономаренко Викторович.`,
      to: 'Команда по доте "БуТыРкА"',
      type: 'ДОТА',
      clarification:
        'Я, Жуйков Роман, прошу Вас одобрить татуировку на Вашем теле с изображением Иосифа Виссарионовича Сталина.Я, Жуйков Роман, прошу Вас одобрить татуировку на Вашем теле с изображением Иосифа Виссарионовича Сталина.Я, Жуйков Роман, прошу Вас одобрить татуировку на Вашем теле с изображением Иосифа Виссарионовича Сталина.',
      date: new Date(),
    }),
    createRequestBlank({
      from: 'От: Андрея Пономаренко Викторовича',
      withRespect: `С уважением, Андрей Пономаренко Викторович.`,
      to: 'Команда по доте "БуТыРкА"',
      type: 'ДОТА',
      clarification:
        'ААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААААА',
      date: new Date(),
      blankType: 'dota',
    }),
    createRequestBlank({
      from: 'От: Андрея Пономаренко Викторовича',
      withRespect: `Без уважения`,
      to: 'Киберспортивному коллективу "БУТЫРКА"',
      type: 'Повестка',
      clarification:
        'Граждане. В соответствии с Федеральным законом "О дотерской обязанности и дотерской службе" Вы обязаны явиться в дотерский дискорд <дата/время> для прохождения распределения на мидера/керри/саппорта/хардлайнера и последующим несением срочной дотерской службы на протяжении от 1 часа c возможностью продления.',
      date: new Date(),
      blankType: 'dota',
    }),
    createRequestBlank({}),
  ])

  res.forEach((file, i) => {
    fs.existsSync('./test') &&
      fs.rmSync('./test', {
        recursive: true,
      })
    fs.mkdirSync('./test')
    file.toFile(`./test/${i}.jpeg`)
  })
})()
